package cn.search.intepreter.opt;

import cn.search.intepreter.opt.A.Const.aconst_null;
import cn.search.intepreter.opt.A.Load.*;
import cn.search.intepreter.opt.A.Store.*;
import cn.search.intepreter.opt.Array.Load.*;
import cn.search.intepreter.opt.Array.Store.*;
import cn.search.intepreter.opt.B.bipush;
import cn.search.intepreter.opt.Cast.D.d2f;
import cn.search.intepreter.opt.Cast.D.d2i;
import cn.search.intepreter.opt.Cast.D.d2l;
import cn.search.intepreter.opt.Cast.F.f2d;
import cn.search.intepreter.opt.Cast.F.f2i;
import cn.search.intepreter.opt.Cast.F.f2l;
import cn.search.intepreter.opt.Cast.I.*;
import cn.search.intepreter.opt.Cast.L.l2d;
import cn.search.intepreter.opt.Cast.L.l2f;
import cn.search.intepreter.opt.Cast.L.l2i;
import cn.search.intepreter.opt.Compare.D.dcmpg;
import cn.search.intepreter.opt.Compare.D.dcmpl;
import cn.search.intepreter.opt.Compare.F.fcmpg;
import cn.search.intepreter.opt.Compare.F.fcmpl;
import cn.search.intepreter.opt.Compare.I.*;
import cn.search.intepreter.opt.Compare.IF.*;
import cn.search.intepreter.opt.Compare.L.lcmp;
import cn.search.intepreter.opt.Control.*;
import cn.search.intepreter.opt.D.Const.*;
import cn.search.intepreter.opt.D.Load.*;
import cn.search.intepreter.opt.D.Store.*;
import cn.search.intepreter.opt.Extended.*;
import cn.search.intepreter.opt.F.Const.*;
import cn.search.intepreter.opt.F.Load.*;
import cn.search.intepreter.opt.F.Store.*;
import cn.search.intepreter.opt.I.Const.*;
import cn.search.intepreter.opt.I.Load.*;
import cn.search.intepreter.opt.I.Store.*;
import cn.search.intepreter.opt.L.Const.*;
import cn.search.intepreter.opt.L.Dc.*;
import cn.search.intepreter.opt.L.Load.*;
import cn.search.intepreter.opt.L.Store.*;
import cn.search.intepreter.opt.Math.D.*;
import cn.search.intepreter.opt.Math.F.*;
import cn.search.intepreter.opt.Math.I.*;
import cn.search.intepreter.opt.Math.L.*;
import cn.search.intepreter.opt.References.*;
import cn.search.intepreter.opt.S.sipush;
import cn.search.intepreter.opt.Stack.*;

import java.util.HashMap;

public class OpcodeMap {

    public static HashMap<Integer, Opcode> OPCODE = new HashMap<>();

    static {
        OPCODE.put(0, new nop());
        OPCODE.put(1, new aconst_null());
        OPCODE.put(2, new iconst_m1());
        OPCODE.put(3, new iconst_0());
        OPCODE.put(4, new iconst_1());
        OPCODE.put(5, new iconst_2());
        OPCODE.put(6, new iconst_3());
        OPCODE.put(7, new iconst_4());
        OPCODE.put(8, new iconst_5());
        OPCODE.put(9, new lconst_0());
        OPCODE.put(10, new lconst_1());
        OPCODE.put(11, new fconst_0());
        OPCODE.put(12, new fconst_1());
        OPCODE.put(13, new fconst_2());
        OPCODE.put(14, new dconst_0());
        OPCODE.put(15, new dconst_1());
        OPCODE.put(16, new bipush());
        OPCODE.put(17, new sipush());
        OPCODE.put(18, new ldc());
        OPCODE.put(19, new ldc_w());
        OPCODE.put(20, new ldc2_w());
        OPCODE.put(21, new iload());
        OPCODE.put(22, new lload());
        OPCODE.put(23, new fload());
        OPCODE.put(24, new dload());
        OPCODE.put(25, new aload());
        OPCODE.put(26, new iload_0());
        OPCODE.put(27, new iload_1());
        OPCODE.put(28, new iload_2());
        OPCODE.put(29, new iload_3());
        OPCODE.put(30, new lload_0());
        OPCODE.put(31, new lload_1());
        OPCODE.put(32, new lload_2());
        OPCODE.put(33, new lload_3());
        OPCODE.put(34, new fload_0());
        OPCODE.put(35, new fload_1());
        OPCODE.put(36, new fload_2());
        OPCODE.put(37, new fload_3());
        OPCODE.put(38, new dload_0());
        OPCODE.put(39, new dload_1());
        OPCODE.put(40, new dload_2());
        OPCODE.put(41, new dload_3());
        OPCODE.put(42, new aload_0());
        OPCODE.put(43, new aload_1());
        OPCODE.put(44, new aload_2());
        OPCODE.put(45, new aload_3());
        OPCODE.put(46, new iaload());
        OPCODE.put(47, new laload());
        OPCODE.put(48, new faload());
        OPCODE.put(49, new daload());
        OPCODE.put(50, new aaload());
        OPCODE.put(51, new baload());
        OPCODE.put(52, new caload());
        OPCODE.put(53, new saload());
        OPCODE.put(54, new istore());
        OPCODE.put(55, new lstore());
        OPCODE.put(56, new fstore());
        OPCODE.put(57, new dstore());
        OPCODE.put(58, new astore());
        OPCODE.put(59, new istore_0());
        OPCODE.put(60, new istore_1());
        OPCODE.put(61, new istore_2());
        OPCODE.put(62, new istore_3());
        OPCODE.put(63, new lstore_0());
        OPCODE.put(64, new lstore_1());
        OPCODE.put(65, new lstore_2());
        OPCODE.put(66, new lstore_3());
        OPCODE.put(67, new fstore_0());
        OPCODE.put(68, new fstore_1());
        OPCODE.put(69, new fstore_2());
        OPCODE.put(70, new fstore_3());
        OPCODE.put(71, new dstore_0());
        OPCODE.put(72, new dstore_1());
        OPCODE.put(73, new dstore_2());
        OPCODE.put(74, new dstore_3());
        OPCODE.put(75, new astore_0());
        OPCODE.put(76, new astore_1());
        OPCODE.put(77, new astore_2());
        OPCODE.put(78, new astore_3());
        OPCODE.put(79, new iastore());
        OPCODE.put(80, new lastore());
        OPCODE.put(81, new fastore());
        OPCODE.put(82, new dastore());
        OPCODE.put(83, new aastore());
        OPCODE.put(84, new bastore());
        OPCODE.put(85, new castore());
        OPCODE.put(86, new sastore());
        OPCODE.put(87, new pop());
        OPCODE.put(88, new pop2());
        OPCODE.put(89, new dup());
        OPCODE.put(90, new dup_x1());
        OPCODE.put(91, new dup_x2());
        OPCODE.put(92, new dup2());
        OPCODE.put(93, new dup2_x1());
        OPCODE.put(94, new dup2_x2());
        OPCODE.put(95, new swap());
        OPCODE.put(96, new iadd());
        OPCODE.put(97, new ladd());
        OPCODE.put(98, new fadd());
        OPCODE.put(99, new dadd());
        OPCODE.put(100, new isub());
        OPCODE.put(101, new lsub());
        OPCODE.put(102, new fsub());
        OPCODE.put(103, new dsub());
        OPCODE.put(104, new imul());
        OPCODE.put(105, new lmul());
        OPCODE.put(106, new fmul());
        OPCODE.put(107, new dmul());
        OPCODE.put(108, new idiv());
        OPCODE.put(109, new ldiv());
        OPCODE.put(110, new fdiv());
        OPCODE.put(111, new ddiv());
        OPCODE.put(112, new irem());
        OPCODE.put(113, new lrem());
        OPCODE.put(114, new frem());
        OPCODE.put(115, new drem());
        OPCODE.put(116, new ineg());
        OPCODE.put(117, new lneg());
        OPCODE.put(118, new fneg());
        OPCODE.put(119, new dneg());
        OPCODE.put(120, new ishl());
        OPCODE.put(121, new lshl());
        OPCODE.put(122, new ishr());
        OPCODE.put(123, new lshr());
        OPCODE.put(124, new iushr());
        OPCODE.put(125, new lushr());
        OPCODE.put(126, new iand());
        OPCODE.put(127, new land());
        OPCODE.put(128, new ior());
        OPCODE.put(129, new lor());
        OPCODE.put(130, new ixor());
        OPCODE.put(131, new lxor());
        OPCODE.put(132, new iinc());
        OPCODE.put(133, new i2l());
        OPCODE.put(134, new i2f());
        OPCODE.put(135, new i2d());
        OPCODE.put(136, new l2i());
        OPCODE.put(137, new l2f());
        OPCODE.put(138, new l2d());
        OPCODE.put(139, new f2i());
        OPCODE.put(140, new f2l());
        OPCODE.put(141, new f2d());
        OPCODE.put(142, new d2i());
        OPCODE.put(143, new d2l());
        OPCODE.put(144, new d2f());
        OPCODE.put(145, new i2b());
        OPCODE.put(146, new i2c());
        OPCODE.put(147, new i2s());
        OPCODE.put(148, new lcmp());
        OPCODE.put(149, new fcmpl());
        OPCODE.put(150, new fcmpg());
        OPCODE.put(151, new dcmpl());
        OPCODE.put(152, new dcmpg());
        OPCODE.put(153, new ifeq());
        OPCODE.put(154, new ifne());
        OPCODE.put(155, new iflt());
        OPCODE.put(156, new ifge());
        OPCODE.put(157, new ifgt());
        OPCODE.put(158, new ifle());
        OPCODE.put(159, new if_icmpeq());
        OPCODE.put(160, new if_icmpne());
        OPCODE.put(161, new if_icmplt());
        OPCODE.put(162, new if_icmpge());
        OPCODE.put(163, new if_icmpgt());
        OPCODE.put(164, new if_icmple());
        OPCODE.put(165, new if_acmpeq());
        OPCODE.put(166, new if_acmpne());
        OPCODE.put(167, new _goto());
        OPCODE.put(168, new jsr());
        OPCODE.put(169, new ret());
        OPCODE.put(170, new tableswitch());
        OPCODE.put(171, new lookupswitch());
        OPCODE.put(172, new ireturn());
        OPCODE.put(173, new lreturn());
        OPCODE.put(174, new freturn());
        OPCODE.put(175, new dreturn());
        OPCODE.put(176, new areturn());
        OPCODE.put(177, new _return());
        OPCODE.put(178, new getstatic());
        OPCODE.put(179, new putstatic());
        OPCODE.put(180, new getfield());
        OPCODE.put(181, new putfield());
        OPCODE.put(182, new invokevirtual());
        OPCODE.put(183, new invokespecial());
        OPCODE.put(184, new invokestatic());
        OPCODE.put(185, new invokeinterface());
        OPCODE.put(186, new invokedynamic());
        OPCODE.put(187, new _new());
        OPCODE.put(188, new newarray());
        OPCODE.put(189, new anewarray());
        OPCODE.put(190, new arraylength());
        OPCODE.put(191, new athrow());
        OPCODE.put(192, new checkcast());
        OPCODE.put(193, new _instanceof());
        OPCODE.put(194, new monitorenter());
        OPCODE.put(195, new monitorexit());
        OPCODE.put(196, new wide());
        OPCODE.put(197, new multianewarray());
        OPCODE.put(198, new ifnull());
        OPCODE.put(199, new ifnonnull());
        OPCODE.put(200, new goto_w());
        OPCODE.put(201, new jsr_w());
    }

}
